<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="student">
  <resultMap class="com.shang.model.Student" id="BaseResultMap">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <iterate conjunction="or" prepend="where" property="oredCriteria" removeFirstPrepend="iterate">
      <isEqual compareValue="true" property="oredCriteria[].valid">
        (
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithoutValue">
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithSingleValue">
          $oredCriteria[].criteriaWithSingleValue[].condition$ #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithListValue">
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate close=")" conjunction="," open="(" property="oredCriteria[].criteriaWithListValue[].values">
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithBetweenValue">
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <sql id="Base_Column_List">
    id, name, sex, age
  </sql>
  <select id="selectByExample" parameterClass="com.shang.model.StudentExample" resultMap="BaseResultMap">
    select
    <isParameterPresent>
      <isEqual compareValue="true" property="distinct">
        distinct
      </isEqual>
    </isParameterPresent>
    <include refid="student.Base_Column_List" />
    from student
    <isParameterPresent>
      <include refid="student.Example_Where_Clause" />
      <isNotNull property="orderByClause">
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="selectByPrimaryKey" parameterClass="com.shang.model.Student" resultMap="BaseResultMap">
    select 
    <include refid="student.Base_Column_List" />
    from student
    where id = #id:VARCHAR#
  </select>
  <delete id="deleteByPrimaryKey" parameterClass="com.shang.model.Student">
    delete from student
    where id = #id:VARCHAR#
  </delete>
  <delete id="deleteByExample" parameterClass="com.shang.model.StudentExample">
    delete from student
    <include refid="student.Example_Where_Clause" />
  </delete>
  <insert id="insert" parameterClass="com.shang.model.Student">
    <selectKey keyProperty="id" resultClass="java.lang.String">
      SELECT genTabId('student')
    </selectKey>
    insert into student (id, name, sex, age)
    values (#id:VARCHAR#, #name:VARCHAR#, #sex:VARCHAR#, #age:INTEGER#)
  </insert>
  <insert id="insertSelective" parameterClass="com.shang.model.Student">
    <selectKey keyProperty="id" resultClass="java.lang.String">
      SELECT genTabId('student')
    </selectKey>
    insert into student
    <dynamic prepend="(">
      <isNotNull prepend="," property="id">
        id
      </isNotNull>
      <isNotNull prepend="," property="name">
        name
      </isNotNull>
      <isNotNull prepend="," property="sex">
        sex
      </isNotNull>
      <isNotNull prepend="," property="age">
        age
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(">
      <isNotNull prepend="," property="id">
        #id:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="name">
        #name:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="sex">
        #sex:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="age">
        #age:INTEGER#
      </isNotNull>
      )
    </dynamic>
  </insert>
  <select id="countByExample" parameterClass="com.shang.model.StudentExample" resultClass="java.lang.Long">
    select count(*) from student
    <include refid="student.Example_Where_Clause" />
  </select>
  <update id="updateByExampleSelective">
    update student
    <dynamic prepend="set">
      <isNotNull prepend="," property="record.id">
        id = #record.id:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.name">
        name = #record.name:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.sex">
        sex = #record.sex:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.age">
        age = #record.age:INTEGER#
      </isNotNull>
    </dynamic>
    <isParameterPresent>
      <include refid="student.Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="updateByExample">
    update student
    set id = #record.id:VARCHAR#,
      name = #record.name:VARCHAR#,
      sex = #record.sex:VARCHAR#,
      age = #record.age:INTEGER#
    <isParameterPresent>
      <include refid="student.Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="updateByPrimaryKeySelective" parameterClass="com.shang.model.Student">
    update student
    <dynamic prepend="set">
      <isNotNull prepend="," property="name">
        name = #name:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="sex">
        sex = #sex:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="age">
        age = #age:INTEGER#
      </isNotNull>
    </dynamic>
    where id = #id:VARCHAR#
  </update>
  <update id="updateByPrimaryKey" parameterClass="com.shang.model.Student">
    update student
    set name = #name:VARCHAR#,
      sex = #sex:VARCHAR#,
      age = #age:INTEGER#
    where id = #id:VARCHAR#
  </update>
</sqlMap>